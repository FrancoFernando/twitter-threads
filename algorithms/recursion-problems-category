https://twitter.com/Franc0Fernand0/status/1603049395276095490?s=20&t=VtHDVAlWR0fFxQJvbbztog

Recursion problems are common in coding interviews.

Here are 6 common categories of recursion problems and their solution patterns: ↓

1. Iteration

Any problem that can be solved with loops can also be solved using recursion.

Sometimes recursion provides a more concise and elegant solution, even if less efficient.

Example:

- traversing a linked list in reverse order.

2. Subproblems

This pattern focus on defining and solving a smaller version of a problem.

The standard strategy to do this is removing something from the input.

Examples:

- find if a string is a palindrome
- find all the ways to climb n stairs

2. Subproblems

This pattern focus on defining and solving a smaller version of a problem.

The standard strategy to do this is removing something from the input.

Examples:

- find if a string is a palindrome
- find all the ways to climb n stairs

4. Ordering

This pattern is similar to Selection, but the order of how the elements are combined matters.

Such problems can be solved by:

• Finding all the permutations

• Filtering them

Example:

- find all the N-digit numbers whose digits sum up to a target number

5. Divide & Conquer

This pattern focus on splitting the problem into multiple subproblems:

• each subproblem is solved separately
• the solutions are combined to get the result

Example:

- find all the ways to parenthesize an expression

6. Depth First Search

This pattern finds a path in a tree or graph:

• Start at a node
• Recursively visit each node's neighbor
• Avoid repeating cycles

Example:

- find the path with the greatest product in a matrix from the top left to the bottom right corner.
